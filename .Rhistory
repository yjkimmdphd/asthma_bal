# Add the plot to the list
plot_list[[paste(names(data)[i], names(data)[j], sep = "_vs_")]] <- p
}
}
# Optional: Display one of the plots to check
print(plot_list[[1]])
# Combine all plots using patchwork
library(patchwork)
plot_layout <- wrap_plots(plot_list, ncol = 3)  # Adjust ncol to fit your requirement
plot_layout
wrap_plots(plot_list[1:15], ncol = 3)
wrap_plots(plot_list[16:30], ncol = 3)
wrap_plots(plot_list[31:45], ncol = 3)
cell_count_cor_heatmap
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title("Correlation Matrix, sampling difference < 30d"))
?corrplot
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title="Correlation Matrix, sampling difference < 30d, no significance")
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title="Correlation Matrix, sampling difference < 30d, no significance",
mar=c(5,5,5,5))
# delete non-significant
corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "circle", addCoef.col = "black", # Add correlation coefficients
p.mat = p_matrix, sig.level = 0.05, # Add significance levels
insig = "n", # What to do with insignificant correlations
addCoefasPercent = FALSE, # Show the coefficients
cl.cex = 0.8,
diag = FALSE,
title="Correlation Matrix with Significance Levels"
) # Adjust text size
# delete non-significant
corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "circle", addCoef.col = "black", # Add correlation coefficients
p.mat = p_matrix, sig.level = 0.05, # Add significance levels
insig = "n", # What to do with insignificant correlations
addCoefasPercent = FALSE, # Show the coefficients
cl.cex = 0.8,
diag = FALSE,
title="Correlation Matrix with Significance Levels",
mar=c(5,5,5,5)
) # Adjust text size
view(bphen)
view(phenotype)
phenotype_filtered
phenotype
# asthma biomarker phenotype file saved in  'phenotype'
phenotype<-file.path("./resources/processed_data/scaled_phenotype_studyID_asthmaPhenotype_batch_cellCount_20240731.csv")
phenotype<-if(file.exists(phenotype)){read.csv(phenotype, row.names = NULL)}
sampling_date_diff<-"./resources/processed_data/sampling_dates/swab-bal-cbc_differences_in_days.txt"
sampling_date_diff<-if(file.exists(sampling_date_diff)){read.table(sampling_date_diff,row.names = NULL,header = TRUE)}
sampling_date_diff<-sampling_date_diff%>%filter(Comparison=="blood_bal")
colnames(sampling_date_diff)[1:3]<-c("ID","sampling_date_comp","sampling_date_diff_days")
sampling_date_diff
sampling_date_diff<-"./resources/processed_data/sampling_dates/swab-bal-cbc_differences_in_days.txt"
sampling_date_diff<-if(file.exists(sampling_date_diff)){read.table(sampling_date_diff,row.names = NULL,header = TRUE)}
sampling_date_diff
sampling_date_diff<-sampling_date_diff%>%filter(Comparison=="bal_nasal")
colnames(sampling_date_diff)[1:3]<-c("ID","sampling_date_comp","sampling_date_diff_days")
sampling_date_diff
phenotype<-left_join(phenotype,sampling_date_diff,by="ID")
phenotype_filtered<-phenotype%>%filter(abs(sampling_date_diff_days)<30)
phenotype<-phenotype_filtered
################################
## load phenotype and batch data
################################
# make vectors of variables for later use as an input for function 'run_deseq2_DEG_analysis'
source.cell.log<-c(
"BAL_eos_ct_log",
"BAL_eos_p_log",
"BAL_neut_ct_log",
"BAL_neut_p_log",
"BAL_wbc_log",
"blood_eos_log",
"blood_eos_p_log",
"blood_neut_log",
"blood_neut_p_log",
"blood_wbc_log")
source.cell<-c(
"BAL_eos_ct",
"BAL_eos_p",
"BAL_neut_ct",
"BAL_neut_p",
"BAL_wbc",
"blood_eos",
"blood_eos_p",
"blood_neut",
"blood_neut_p",
"blood_wbc")
###########################################################################################
## subset phenotype data for which the samples exist for bronchial RNAseq experiments
###########################################################################################
bexist<-phenotype$SampleID%in%counts.ID # find which subjects s/p BAL and had bronchial sample RNAseq completed
bphen<-phenotype[bexist,]%>%filter(grepl("^B",SampleID))
bphen<-mutate_at(bphen,vars(all_of(source.cell.log)),scale)
# calculating 'r' and p-val of cell count correlation
data<-bphen[,source.cell.log]
rownames(data)<-bphen$SampleID
correlation_results <- Hmisc::rcorr(as.matrix(data))
cor_matrix <- correlation_results$r  # Correlation matrix
p_matrix <- correlation_results$P   # Matrix of p-values
# Function to create significance labels
get_sig_labels <- function(p_matrix, sig.level = c(0.001, 0.01, 0.05)) {
# Assign significance levels as asterisks
sig_labels <- matrix("", nrow = nrow(p_matrix), ncol = ncol(p_matrix))
sig_labels[p_matrix <= sig.level[1]] <- "***"
sig_labels[p_matrix <= sig.level[2] & p_matrix > sig.level[1]] <- "**"
sig_labels[p_matrix <= sig.level[3] & p_matrix > sig.level[2]] <- "*"
sig_labels
}
# Generate significance labels
sig_labels <- get_sig_labels(p_matrix)
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title="Correlation Matrix, sampling difference < 30d, no significance",
mar=c(5,5,5,5))
sampling_date_diff<-"./resources/processed_data/sampling_dates/swab-bal-cbc_differences_in_days.txt"
sampling_date_diff<-if(file.exists(sampling_date_diff)){read.table(sampling_date_diff,row.names = NULL,header = TRUE)}
sampling_date_diff<-sampling_date_diff%>%filter(Comparison=="blood_bal")
colnames(sampling_date_diff)[1:3]<-c("ID","sampling_date_comp","sampling_date_diff_days")
phenotype<-left_join(phenotype,sampling_date_diff,by="ID")
phenotype_filtered<-phenotype%>%filter(abs(sampling_date_diff_days)<30)
source.cell<-c(
"BAL_eos_ct",
"BAL_eos_p",
"BAL_neut_ct",
"BAL_neut_p",
"BAL_wbc",
"blood_eos",
"blood_eos_p",
"blood_neut",
"blood_neut_p",
"blood_wbc")
###########################################################################################
## subset phenotype data for which the samples exist for bronchial RNAseq experiments
###########################################################################################
bexist<-phenotype$SampleID%in%counts.ID # find which subjects s/p BAL and had bronchial sample RNAseq completed
bphen<-phenotype[bexist,]%>%filter(grepl("^B",SampleID))
bphen<-mutate_at(bphen,vars(all_of(source.cell.log)),scale)
# calculating 'r' and p-val of cell count correlation
data<-bphen[,source.cell.log]
rownames(data)<-bphen$SampleID
correlation_results <- Hmisc::rcorr(as.matrix(data))
cor_matrix <- correlation_results$r  # Correlation matrix
p_matrix <- correlation_results$P   # Matrix of p-values
# Function to create significance labels
get_sig_labels <- function(p_matrix, sig.level = c(0.001, 0.01, 0.05)) {
# Assign significance levels as asterisks
sig_labels <- matrix("", nrow = nrow(p_matrix), ncol = ncol(p_matrix))
sig_labels[p_matrix <= sig.level[1]] <- "***"
sig_labels[p_matrix <= sig.level[2] & p_matrix > sig.level[1]] <- "**"
sig_labels[p_matrix <= sig.level[3] & p_matrix > sig.level[2]] <- "*"
sig_labels
}
# Generate significance labels
sig_labels <- get_sig_labels(p_matrix)
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title="Correlation Matrix, sampling difference < 30d, no significance",
mar=c(5,5,5,5))
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title="Correlation Matrix, sampling difference < 30d, no significance",
mar=c(5,5,5,5))
asthma biomarker phenotype file saved in  'phenotype'
# asthma biomarker phenotype file saved in  'phenotype'
phenotype<-file.path("./resources/processed_data/scaled_phenotype_studyID_asthmaPhenotype_batch_cellCount_20240731.csv")
phenotype<-if(file.exists(phenotype)){read.csv(phenotype, row.names = NULL)}
sampling_date_diff<-"./resources/processed_data/sampling_dates/swab-bal-cbc_differences_in_days.txt"
sampling_date_diff<-if(file.exists(sampling_date_diff)){read.table(sampling_date_diff,row.names = NULL,header = TRUE)}
sampling_date_diff<-sampling_date_diff%>%filter(Comparison=="blood_bal")
colnames(sampling_date_diff)[1:3]<-c("ID","sampling_date_comp","sampling_date_diff_days")
phenotype<-left_join(phenotype,sampling_date_diff,by="ID")
phenotype_filtered<-phenotype%>%filter(abs(sampling_date_diff_days)<30)
phenotype<-phenotype_filtered
################################
## load phenotype and batch data
################################
# make vectors of variables for later use as an input for function 'run_deseq2_DEG_analysis'
source.cell.log<-c(
"BAL_eos_ct_log",
"BAL_eos_p_log",
"BAL_neut_ct_log",
"BAL_neut_p_log",
"BAL_wbc_log",
"blood_eos_log",
"blood_eos_p_log",
"blood_neut_log",
"blood_neut_p_log",
"blood_wbc_log")
source.cell<-c(
"BAL_eos_ct",
"BAL_eos_p",
"BAL_neut_ct",
"BAL_neut_p",
"BAL_wbc",
"blood_eos",
"blood_eos_p",
"blood_neut",
"blood_neut_p",
"blood_wbc")
###########################################################################################
## subset phenotype data for which the samples exist for bronchial RNAseq experiments
###########################################################################################
bexist<-phenotype$SampleID%in%counts.ID # find which subjects s/p BAL and had bronchial sample RNAseq completed
bphen<-phenotype[bexist,]%>%filter(grepl("^B",SampleID))
bphen<-mutate_at(bphen,vars(all_of(source.cell.log)),scale)
# calculating 'r' and p-val of cell count correlation
data<-bphen[,source.cell.log]
rownames(data)<-bphen$SampleID
correlation_results <- Hmisc::rcorr(as.matrix(data))
cor_matrix <- correlation_results$r  # Correlation matrix
p_matrix <- correlation_results$P   # Matrix of p-values
# Function to create significance labels
get_sig_labels <- function(p_matrix, sig.level = c(0.001, 0.01, 0.05)) {
# Assign significance levels as asterisks
sig_labels <- matrix("", nrow = nrow(p_matrix), ncol = ncol(p_matrix))
sig_labels[p_matrix <= sig.level[1]] <- "***"
sig_labels[p_matrix <= sig.level[2] & p_matrix > sig.level[1]] <- "**"
sig_labels[p_matrix <= sig.level[3] & p_matrix > sig.level[2]] <- "*"
sig_labels
}
# Generate significance labels
sig_labels <- get_sig_labels(p_matrix)
# plot correlation coef and pval
cell_count_cor_heatmap<-corrplot::corrplot(cor_matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
method = "ellipse", addCoef.col = "black",
diag= FALSE,
title="Correlation Matrix, sampling difference < 30d, no significance",
mar=c(5,5,5,5))
focused_list<-c("deg_bronch_res_sig_3_",
"deg_bronch_res_sig_5_",
"deg_nasal_res_sig_13_",
"deg_nasal_res_sig_7_")
focused_list_all<-c("deg_bronch_res_all_3_",
"deg_bronch_res_all_5_",
"deg_nasal_res_all_13_",
"deg_nasal_res_all_7_")
library(tidyverse)
library(EnhancedVolcano)
library(pheatmap)
library(gridExtra)
library(grid)
deg_folder<-file.path("./resources/processed_data/focused_analysis")
deg_file<-list.files(deg_folder)
matching_files <- deg_file[sapply(deg_file, function(file) any(sapply(focused_list, grepl, file)))]
deg_file<-matching_files
all_deg_folder<-file.path(deg_folder,"deg_all")
all_deg_file<-list.files(all_deg_folder)
matching_files <- all_deg_file[sapply(all_deg_file, function(file) any(sapply(focused_list_all, grepl, file)))]
all_deg_file<-matching_files
analysis_list<-c("br.bal.aec.mt1.2",
"br.bal.eosp.mt1",
"n.bld.aec.mt100",
"n.bld.eosp.cont")
deg_file_call_df<-data.frame(ananlysis=analysis_list,file=deg_file)
deg_list<-lapply(file.path(deg_folder,deg_file),function(d)read.csv(d,header=TRUE,row.names = 1))
names(deg_list)<-deg_file_call_df$ananlysis
# DEGs abs(log2FC) > 0.585 (1.5fold increase) and Padj < 0.05
lapply(deg_list,function(d)filter(d,abs(log2FoldChange)>0.585)%>%dim)
focused_list<-c("deg_bronch_res_sig_3_",
"deg_bronch_res_sig_5_",
"deg_nasal_res_sig_13_",
"deg_nasal_res_sig_7_")
focused_list_all<-c("deg_bronch_res_all_3_",
"deg_bronch_res_all_5_",
"deg_nasal_res_all_13_",
"deg_nasal_res_all_7_")
library(tidyverse)
library(EnhancedVolcano)
library(pheatmap)
library(gridExtra)
library(grid)
deg_folder<-file.path("./resources/processed_data/focused_analysis")
deg_file<-list.files(deg_folder)
matching_files <- deg_file[sapply(deg_file, function(file) any(sapply(focused_list, grepl, file)))]
deg_file<-matching_files
all_deg_folder<-file.path(deg_folder,"deg_all")
all_deg_file<-list.files(all_deg_folder)
matching_files <- all_deg_file[sapply(all_deg_file, function(file) any(sapply(focused_list_all, grepl, file)))]
all_deg_file<-matching_files
analysis_list<-c("br.bal.aec.mt1.2",
"br.bal.eosp.mt1",
"n.bld.aec.mt100",
"n.bld.eosp.cont")
deg_file_call_df<-data.frame(ananlysis=analysis_list,file=deg_file)
deg_list<-lapply(file.path(deg_folder,deg_file),function(d)read.csv(d,header=TRUE,row.names = 1))
names(deg_list)<-deg_file_call_df$ananlysis
# Find # of DEGs abs(log2FC) > 0.585 (1.5fold increase) and Padj < 0.05
print(lapply(deg_list,function(d)filter(d,abs(log2FoldChange)>0.585)%>%dim))
all_deg_file_call_df<-data.frame(ananlysis=analysis_list,file=all_deg_file)
all_deg_list<-lapply(file.path(all_deg_folder,all_deg_file),function(d)read.csv(d,header=TRUE,row.names = 1))
names(all_deg_list)<-all_deg_file_call_df$ananlysis
# find pairwise overlapping DEGs between each analysis
# Define the threshold for down-regulated genes
threshold <- -0.585
# Filter each data frame for down-regulated genes and extract their row names
downregulated_genes_list <- lapply(deg_list, function(df) {
rownames(df[df$log2FoldChange < threshold, ])
})
# Function to perform pairwise comparisons
pairwise_comparisons <- function(genes_list) {
n <- length(genes_list)
comparisons <- list()
for (i in 1:(n-1)) {
for (j in (i+1):n) {
pair_name <- paste0("Comparison_", i, "_vs_", j)
shared_genes <- intersect(genes_list[[i]], genes_list[[j]])
comparisons[[pair_name]] <- shared_genes
}
}
return(comparisons)
}
# Perform pairwise comparisons
pairwise_results <- pairwise_comparisons(downregulated_genes_list)
# Print the results
print(pairwise_results)
# volcano plots
for(i in seq_along(all_deg_list)){
res<-all_deg_list[[i]]
res<-res%>%mutate(deg_sig=ifelse(padj<0.05&log2FoldChange>0.585,'cyan',
ifelse(padj<0.05&log2FoldChange< -0.585,'magenta',
'grey')))
keyvals <- ifelse(res$padj<0.05&res$log2FoldChange>0.585,'cyan',
ifelse(res$padj<0.05&res$log2FoldChange< -0.585,'magenta',
'grey'))
names(keyvals)[keyvals == 'cyan'] <- 'up'
names(keyvals)[keyvals == 'magenta'] <- 'down'
names(keyvals)[keyvals == 'grey'] <- 'nonsig'
title= names(all_deg_list[i])
labs_up= rownames(filter(res,padj<0.05,log2FoldChange>0)%>%arrange(desc(log2FoldChange)))[1:10]
labs_down= rownames(filter(res,padj<0.05,log2FoldChange<0)%>%arrange(desc(abs(log2FoldChange))))[1:10]
labs=c(labs_up,labs_down,"CXCR1","CXCR2","CXCR4")
p<-EnhancedVolcano(res,
lab = rownames(res),
selectLab = labs,
title=title,
x = 'log2FoldChange',
y = 'padj',
xlab = bquote(~Log[2]~ 'fold change'),
xlim=c(min(res$log2FoldChange),max(res$log2FoldChange)),
ylim=c(0,-log(min(res$padj),10)),
pCutoff = 5e-2,
FCcutoff = 0.585,
cutoffLineType = 'twodash',
cutoffLineWidth = 0.8,
pointSize = 4.0,
labSize = 3,
colAlpha = 0.4,
colCustom = keyvals,
legendPosition = 'right',
legendLabSize = 10,
legendIconSize = 5.0,
drawConnectors = TRUE,
widthConnectors = 0.75)
assign(x = paste0("p",i),p)
}
# volcano plots
for(i in seq_along(all_deg_list)){
res<-all_deg_list[[i]]
res<-res%>%mutate(deg_sig=ifelse(padj<0.05&log2FoldChange>0.585,'cyan',
ifelse(padj<0.05&log2FoldChange< -0.585,'magenta',
'grey')))
keyvals <- ifelse(res$padj<0.05&res$log2FoldChange>0.585,'cyan',
ifelse(res$padj<0.05&res$log2FoldChange< -0.585,'magenta',
'grey'))
names(keyvals)[keyvals == 'cyan'] <- 'up'
names(keyvals)[keyvals == 'magenta'] <- 'down'
names(keyvals)[keyvals == 'grey'] <- 'nonsig'
title= names(all_deg_list[i])
labs_up= rownames(filter(res,padj<0.05,log2FoldChange>0)%>%arrange(desc(log2FoldChange)))[1:10]
labs_down= rownames(filter(res,padj<0.05,log2FoldChange<0)%>%arrange(desc(abs(log2FoldChange))))[1:10]
labs=c(labs_up,labs_down,"CXCR1","CXCR2","CXCR4")
p<-EnhancedVolcano(res,
lab = rownames(res),
selectLab = labs,
title=title,
x = 'log2FoldChange',
y = 'padj',
xlab = bquote(~Log[2]~ 'fold change'),
xlim=c(min(res$log2FoldChange),max(res$log2FoldChange)),
ylim=c(0,-log(min(res$padj),10)),
pCutoff = 5e-2,
FCcutoff = 0.585,
cutoffLineType = 'twodash',
cutoffLineWidth = 0.8,
pointSize = 4.0,
labSize = 3,
colAlpha = 0.4,
colCustom = keyvals,
legendPosition = 'right',
legendLabSize = 10,
legendIconSize = 5.0,
drawConnectors = TRUE,
widthConnectors = 0.75)
assign(x = paste0("p",i),p)
}
vp<-lapply(paste0("p",seq_along(all_deg_list)),get)
names(vp)<-names(all_deg_list)
lapply(vp,print)
vp[[1]]
vp[2]
length(vp)
# GO term
go_folder<-file.path(deg_folder,"go")
go_folder_files<-list.files(go_folder)
go_files<-file.path(go_folder,go_folder_files[grep(".txt",go_folder_files)])
go_deg_terms<-lapply(go_files,read.table,sep="\t",header=TRUE)
# Filter each element of go_deg_terms to remove rows where Category is "GOTERM_CC_DIRECT"
go_deg_terms_filtered <- lapply(go_deg_terms, function(df) {
df %>% filter(Category != "GOTERM_CC_DIRECT")
})
lapply(go_deg_terms,head)
lapply(go_deg_terms,colnames)
go_analysis<-c(
"GO-01_sig-bronch-deg~bal_AEC_mt_1.2_down",
"GO-02_sig-bronch-deg~bal_AEC_mt_1.2_up",
"GO-03_sig-bronch-deg~bal_AEC_mt_1_down",
"GO-04_sig-bronch-deg~bal_AEC_mt_1_up",
"GO-05_sig-bronch-deg~bal_Eos_p_more_1_down",
"GO-06_sig-bronch-deg~bal_Eos_p_more_1_up",
"GO-07_sig-bronch-deg~bal_Eos_p_more_3_down",
"GO-08_sig-bronch-deg~bal_Eos_p_more_3_up",
"GO-09_sig-bronch-deg~bld_AEC_more_300_down",
"GO-10_sig-bronch-deg~bld_AEC_more_300_up",
"GO-11_sig-nasal-deg~blood_Eos_p_cont_down",
"GO-12_sig-nasal-deg~blood_Eos_p_cont_up",
"GO-13_sig_bronch~deg_bal_ANCmt0_cont_down",
"GO-14_sig_bronch~deg_bal_ANCmt0_cont_up",
"GO-15_wgcna-bronch_magenta_module-overlap_br-bal-eosp-mt1",
"GO-16_wgcna-bronch_magenta_module",
"GO-17_nasal~bld_AEC_mt100_down",
"GO-18_nasal~bld_AEC_mt100_up",
"GO-19_sig_bronch_deg~bal_anc_mt13_down_none",
"GO-20_sig_bronch_deg~bal_anc_mt13_up_none",
"GO-21_overlap-sig-nasal~bld_AEC_mt100_down-bronch~bal_eos_p_mt1_down"
)
names(go_deg_terms)<-go_analysis
# select relevant columns
go_deg_terms<-lapply(go_deg_terms,function(d){
d[,c("X","Genes","Fold.Enrichment","FDR")]%>%
filter(FDR<0.05)%>%
arrange(FDR)})
gt<-lapply(go_deg_terms,
function(data){
gt<-factor(data$X,levels=data$X)
})
for(i in 1:length(go_deg_terms)){
go_deg_terms[[i]]$X<-gt[[i]]
}
wrapped_label<-lapply(go_deg_terms,
function(data){
go_term<-data$X
str_wrap(go_term, width=40)})
# plot FDR vs ontology (fill by FC)
for(i in seq_along(go_deg_terms)){
p<-ggplot(go_deg_terms[[i]][1:10,], aes(fill = Fold.Enrichment, y = X, x = -log10(FDR))) + # show only top 15
geom_bar(stat = "identity") +
#geom_label(aes(label = round(Fold.Enrichment, 1)), fill="white",nudge_y=0.3, hjust = -0.1, size = 3, color = "black") +  # Add text labels for log10(FDR)
scale_fill_gradient(low = "blue", high = "red") +  # Adjust color gradient as needed
labs(fill = "Fold Enrichment", y = "Gene Ontology Term", x = "-log10(FDR)", title = names(go_deg_terms[i])) +
theme(axis.text.x = element_text(size = 10),  # Change size of x-axis labels
axis.text.y = element_text(size=12),
axis.title= element_text(size=12),
legend.title=element_text(size=10),
title = element_text(size=12))+  # Adjust y-axis label size for better readability
scale_y_discrete(labels=wrapped_label[[i]])+
xlim(0,max(-log(go_deg_terms[[i]]$FDR,10),na.rm=TRUE))
assign(paste("GO", i,"by_FDR", sep = "_"), p)
}
grobs<-lapply(paste("GO", seq_along(go_deg_terms), "by_FDR",sep = "_"),get)
# Arrange the plots in a 2x4 grid
gp_1<-grid.arrange(grobs = grobs[1:2], nrow = 2)
gp_2<-grid.arrange(grobs = grobs[3:4], nrow = 2)
gp_3<-grid.arrange(grobs = grobs[5:6], nrow = 2)
gp_4<-grid.arrange(grobs = grobs[7:8], nrow = 2)
gp_5<-grid.arrange(grobs = grobs[9:10], nrow = 2)
gp_6<-grid.arrange(grobs = grobs[11:12], nrow = 2)
gp_7<-grid.arrange(grobs = grobs[13:14], nrow = 2)
gp_8<-grid.arrange(grobs = grobs[15:16], nrow = 2)
gp_9<-grid.arrange(grobs = grobs[17:18], nrow = 2)
gp_10<-grid.arrange(grobs = grobs[19:20], nrow = 2)
gp_11<-grid.arrange(grobs = grobs[21], nrow = 2)
gp_3<-grid.arrange(grobs = grobs[5:6], nrow = 2)
gp_6<-grid.arrange(grobs = grobs[11:12], nrow = 2)
gp_9<-grid.arrange(grobs = grobs[17:18], nrow = 2)
gp_11<-grid.arrange(grobs = grobs[21], nrow = 2)
