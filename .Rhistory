hcut_level<-73
gene_cluster<-cutree(hclust_result, h = hcut_level)
sample_cluster<-cutree(hclust_result_sample, h = 120)
# Subset the gene expression matrix based on the cut clusters
cluster_order<-order(gene_cluster)
sample_cluster_order<-order(sample_cluster)
lcpm_hclust <- lcpm[cluster_order, sample_cluster_order] # hclust ordered by cluster with custom cutoff h value
# 2.2 compare lcpm_gene_names with deg gene names. reorder gene names in deg so that their order of gene names match that of lcpm_gene_names
# Find the order of genes in lcpm within deg
lcpm_gene_names<-rownames(lcpm_hclust)
order_genelist1 <- match(lcpm_gene_names, deg_nb$X)
# Reorder genelist2 based on the order of genes in genelist1
deg_nb_reordered <- deg_nb[order_genelist1,]
# reorder col/samples based on blood Eos counts
new_sample_order<-match(phen_sub$SampleID,exist_samples)
new_lcpm_hclust<-lcpm_hclust[,new_sample_order]
head(new_lcpm_hclust)
head(phen_sub$SampleID)
# custom color palette for gene
my_palette <- colorRampPalette(c("#7122F5","#FEFE62"))(n = 50) # custom heatmap pallette
heatmap.2(lcpm_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_nb_reordered$type_col,
ColSideColors = ifelse(phen_sub$rna_sample=="nasal","#E66100","#5D3A9B"))
##
# demonstrate the distinct gene expression profile in nasal and bronchial
##
library(limma)
library(edgeR)
library(dplyr)
library(DESeq2)
library(gplots)
library(pheatmap)
######################
# need to do
# [ ] separate up/down regulated genes
# [ ] find the DEG found both in nasal and bronchial
# load count data from seq batch 1-4
counts<-file.path("./resources/working_data/copy_of_batch1234_readcount_matrix_allsamples.afterQC.txt") # original RNAseqs count data table is in the MS_asthma folder
counts<-if(file.exists(counts)){read.delim(counts)}
counts.ID<-colnames(counts)
## load readcount data
data.folder<-file.path("./reports/local_only/")
################################
## load phenotype and batch data
################################
# make vectors of variables for later use as an input for function 'run_deseq2_DEG_analysis'
source.cell.log<-c(
"BAL_eos_ct_log",
"BAL_eos_p_log",
"BAL_neut_ct_log",
"BAL_neut_p_log",
"BAL_wbc_log",
"blood_eos_log",
"blood_eos_p_log",
"blood_neut_log",
"blood_neut_p_log",
"blood_wbc_log")
source.cell<-c(
"BAL_eos_ct",
"BAL_eos_p",
"BAL_neut_ct",
"BAL_neut_p",
"BAL_wbc",
"blood_eos",
"blood_eos_p",
"blood_neut",
"blood_neut_p",
"blood_wbc")
# asthma biomarker phenotype file saved in  'phenotype'
phenotype<-file.path("./resources/processed_data/Nasal_Biomarkers_BAL_transformed.csv")
phenotype<-if(file.exists(phenotype)){read.csv(phenotype, row.names = NULL)}
numeric_id<-phenotype$ID
phenotype$ID<-sprintf("%03d",numeric_id) # adds padded zeros in front of the subject ID numbers
phenotype<-mutate(phenotype,pos_cellcount=phenotype[,source.cell]>0)%>%arrange(ID) # check which cell counts are positive.
###########################################################################################
## subset phenotype data for which the samples exist for nasal/bronchial RNAseq experiments
###########################################################################################
nID<-paste0("N",phenotype$ID) # N*** indicates nasal sample ID, sequence data is not available for all as of 2023-10-04
bID<-paste0("B",phenotype$ID) # B*** indicates bronchial sample ID, sequence data is not available for all as of 2023-10-04
nexist<-nID%in%counts.ID # find which subjects s/p nasal and had bronchial sample RNAseq completed. Nasal samples in batch 1-4 only sequenced to ID 337
bexist<-bID%in%counts.ID # find which subjects s/p BAL and had bronchial sample RNAseq completed
nsample<-nID[nexist] # nasal sample ID in the readcount matrix (batch 1-4) that has BAL phenotype data
bsample<-bID[bexist] # bronchial sample ID in the readcount matrix (batch 1-4) that has BAL phenotype data
nphen<-phenotype[phenotype$ID%in%substring(nsample,2),] # phenotype table with nsample
bphen<-phenotype[phenotype$ID%in%substring(bsample,2),] # phenotype table with bsample
nphen<-mutate(nphen, SampleID=nsample)%>%relocate(SampleID, .before=1) # include sample ID for nasal RNAseq samples
bphen<-mutate(bphen, SampleID=bsample)%>%relocate(SampleID, .before=1) # include sample ID for bronchial RNAseq samples
# left join batch info table with nasal/bronchial phenotype table
## get batch information
batch<-file.path("./resources/processed_data/asthma_nasal_bronchial_batch1234_info.txt")
batch.info<-if(file.exists(batch)){read.delim(batch)}
## define function join_phenotype_batch_info. p is phenotype table. b is batch info table. Factorize the batch info.
join_phenotype_batch_info<-function(p,b){
table<-left_join(p,b, by="SampleID")
table$Batch<-factor(table$Batch, levels=unique(table$Batch))
return(table)
}
nphen<-join_phenotype_batch_info(nphen,batch.info)
bphen<-join_phenotype_batch_info(bphen,batch.info)
nphen<-nphen%>%mutate(IsBatch4 = Batch == "batch4")
bphen<-bphen%>%mutate(IsBatch4 = Batch == "batch4")
# scale the cell count information
# Mike Love: I'd recommend however to center and scale the numeric covariates for model fitting improvement.
# scale the columns named with source.cell.log
nphen<-mutate_at(nphen,vars(all_of(source.cell.log)),scale) # scales and mutates all log-transformed cell counts
bphen<-mutate_at(bphen,vars(all_of(source.cell.log)),scale) # scales and mutates all log-transformed cell counts
# decide which analysis to perform, then set the phenotype data as phen
phen<-rbind(nphen,bphen)
# compare the each samples bal Eos data against the threshold
phen<-phen%>%mutate(isBalEosCtNa=is.na(BAL_eos_ct),
isbloodEosCtNa=is.na(blood_eos),
isBalEosCtZero=BAL_eos_ct==0,
isBalEosct2=BAL_eos_ct<2,
isBalEosP2=BAL_eos_p<2,
isBalEosct6=BAL_eos_ct<6,
isBalEosP6=BAL_eos_p<6,
isbldEosCtZero=blood_eos==0,
isbldEosp4=blood_eos_p<4,
isbldEosp6=blood_eos_p<6,
isbldEosct300=blood_eos<300,
isbldEosct400=blood_eos<400
)
df<-vector("list",length=length(49:58)) # list of data frames used as an input for deseq2. all cell counts
names(df)<-colnames(phen)[49:58]
pi<-lapply(phen[,names(df)],function(data){a<-!is.na(data);return(a)})
phen_sub<-phen[pi[[10]],c("SampleID","ID","blood_eos_log","isbldEosct300")]
rownames(phen_sub)<-c(1:nrow(phen_sub))
phen_sub$rna_sample<-c(rep("nasal",40),rep("bronch",41))
phen_sub<-phen_sub%>%group_by(rna_sample,blood_eos_log,isbldEosct300)
phen_sub<-phen_sub%>%arrange(SampleID, rna_sample,blood_eos_log,isbldEosct300,.by_group=TRUE)%>%print(n=78)
###################################
# custom functions for DEG analysis
###################################
# should load the following fx:
## filter_low_expressed_genes_method2: Filters low counts genes using TMM normalized lcpm as a cutoff point. Requires 'limma'
## rowgenes_counttable: changes the row names of the count table with gene names
## run_deseq2_DEG_analysis: takes countdata,coldata,design,des as variables, and runs DEG on DESeq2
## get_DEG_results: saves result of DESeq2 output, ordered in padj
## generate_DEG_input_summary_table: makes a table of input information
## generate_DEG_summary_table: makes results summary (i.e., # of DEG for each analysis)
source("./src/function/deg_custom_functions.R")
###########################################---------------------###########################################
# sample type: nasal/bronchial. up-regulated genes only
# sample sorting: order of blood AEC
###########################################---------------------###########################################
#####################################
## 1. Load data and normalize to lcpm
#####################################
# load list of genes
deg_gene_folder<-file.path("./reports/local_only/deg~bal-blood_cell(continuous)+batch/deg_gene_list")
deg_bronch_bal_neut<-read.csv(file.path(deg_gene_folder,"deg_Bronchial_poscells_~ BAL_neut_ct_log + Batch_res_3_2024-01-09_.csv"))%>%mutate(direction=ifelse(log2FoldChange>0,"up","down"))
deg_nasal_bld_eos<-read.csv(file.path(deg_gene_folder,"deg_Nasal_poscells_~ blood_eos_log + Batch_res_6_2024-01-09_.csv"))%>%mutate(direction=ifelse(log2FoldChange>0,"up","down"))
head(deg_nasal_bld_eos)
head(deg_bronch_bal_neut)
deg_nasal_bld_eos<-deg_nasal_bld_eos%>%mutate(type="nasal")
deg_bronch_bal_neut<-deg_bronch_bal_neut%>%mutate(type="bronch")
deg_nb<-rbind(deg_bronch_bal_neut,deg_nasal_bld_eos)%>%mutate(type_col=ifelse(type=="nasal","red","blue"))
phen_sub<-phen_sub%>%mutate(eos_col=ifelse(isbldEosct300=="TRUE","#E66100","#5D3A9B"))
rownames(counts)<-counts$SampleID
head(counts)
exist_samples<-colnames(counts)[counts.ID%in%phen_sub$SampleID]
new_counts<-counts[,exist_samples]
head(new_counts)
ct_u<-new_counts[rownames(new_counts)%in%unique(filter(deg_nb,direction=="up")$X),]
ct_d<-new_counts[rownames(new_counts)%in%unique(filter(deg_nb,direction=="down")$X),]
# lcpm for upregulated DEG
## 1. normalize counts with TMM
norm.factor<-calcNormFactors(ct_u, method = "TMM")
sample.size<-length(colnames(ct_u))
for(i in 1:sample.size){
ct_u[,i]<-ct_u[,i]/norm.factor[i]
}
## 2. calculate lcpm based on TMM normalized counts
lcpm_up<-cpm(ct_u,log=TRUE)
# lcpm for upregulated DEG
## 1. normalize counts with TMM
norm.factor<-calcNormFactors(ct_d, method = "TMM")
sample.size<-length(colnames(ct_d))
for(i in 1:sample.size){
ct_d[,i]<-ct_d[,i]/norm.factor[i]
}
## 2. calculate lcpm based on TMM normalized counts
lcpm_down<-cpm(ct_d,log=TRUE)
############################################################
## Step 2: Hierarchical Clustering with 'hclust' for lcpm_up
############################################################
## 2.1 clustering for lcpm_up
# Calculate the distance matrix
dist_mat_up <- dist(lcpm_up)
# Perform hierarchical clustering
hclust_result_up <- hclust(dist_mat_up, method = "complete")
hcut_level<-60
# explore the dendrogram with 'cutree'
dendrogram_obj<-hclust_result_up%>%as.dendrogram
cut_tree <- dendextend::cutree(
dendrogram_obj,
h = hcut_level,
order_clusters_as_data = FALSE
)
table(cut_tree)
# Then, we plot the tree with group labels
dendrogram_obj %>%
dendextend::color_branches(h = hcut_level,
col = pals::alphabet2(),
groupLabels = TRUE) %>% plot
# Cut the dendrogram to define clusters (adjust the height parameter as needed)
hcut_level<-60
gene_cluster_up<-cutree(hclust_result_up, h = hcut_level)
# Subset the gene expression matrix based on the cut clusters
cluster_order<-order(gene_cluster_up)
lcpm_up_hclust <- lcpm_up[cluster_order, ] # hclust ordered by cluster with custom cutoff h value
# define color pallette for heatmap and row labels
deg_up<-deg_nb%>%filter(direction=="up")
# 2.2 compare lcpm_gene_names with deg_up gene names. reorder gene names in deg_up so that their order of gene names match that of lcpm_gene_names
# Find the order of genes in lcpm_up within deg_up
lcpm_gene_names<-rownames(lcpm_up_hclust)
order_genelist1 <- match(lcpm_gene_names, deg_up$X)
# Reorder genelist2 based on the order of genes in genelist1
deg_up_reordered <- deg_up[order_genelist1,]
# reorder col/samples based on blood Eos counts
new_sample_order<-match(phen_sub$SampleID,exist_samples)
new_lcpm_up_hclust<-lcpm_up_hclust[,new_sample_order]
head(new_lcpm_up_hclust)
head(phen_sub$SampleID)
# custom color palette for gene
my_palette <- colorRampPalette(c("#7122F5","#FEFE62"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
legend("top", legend = c("nasal","bronchial"), fill = c("red","blue"), title = "Sample Type")
legend("topright", legend = c("AEC<300","AEC>=300"), fill = c("#E66100","#5D3A9B"), title = "Bld AEC")
#
#
# custom color palette for gene
my_palette <- colorRampPalette(c("#540084","#FEFE62"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# custom color palette for gene
my_palette <- colorRampPalette(c("#540084","#FFFF96"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
legend("top", legend = c("nasal","bronchial"), fill = c("red","blue"), title = "Sample Type")
legend("topright", legend = c("AEC<300","AEC>=300"), fill = c("#E66100","#5D3A9B"), title = "Bld AEC")
legend("top", legend = c("nasal~bld AEC","bronch~BAL ANC"), fill = c("red","blue"), title = "up-regulated genes in")
# Enlarge font size for specific row labels
enlarged_row_labels <- c("FAM92B", "AK7", "DNAH9", "TSNAXIP1", "LRRC23", "RSPH14", "DZIP1L", "SPA17", "SAXO2")  # Customize as needed
new_lcpm_up_hclust
# Find the indices of the enlarged row labels
enlarged_indices <- match(enlarged_row_labels, rownames(new_lcpm_up_hclust))
enlarged_indices
new_lcpm_up_hclust[enlarged_indices,]
rep(1, length(rownames(new_lcpm_up_hclust)))
# Set default font size for row labels
cexRow <- rep(1, length(rownames(new_lcpm_up_hclust)))
# Enlarge the font size for specific row labels
cexRow[enlarged_indices] <- 1.5  # Adjust the factor for desired enlargement
# enlarged fonts for key driver genes
# Example row labels
row_labels <- rownames(new_lcpm_up_hclust)
# enlarged fonts for key driver genes
# Example row labels
row_labels <- rownames(new_lcpm_up_hclust)
# Enlarge font size for specific row labels
enlarged_row_labels <- c("FAM92B", "AK7", "DNAH9", "TSNAXIP1", "LRRC23", "RSPH14", "DZIP1L", "SPA17", "SAXO2")  # Customize as needed
# Find the indices of the enlarged row labels
enlarged_indices <- match(enlarged_row_labels, rownames(new_lcpm_up_hclust))
# Set default font size for row labels
cexRow <- rep(1, length(rownames(new_lcpm_up_hclust)))
# Enlarge the font size for specific row labels
cexRow[enlarged_indices] <- 1.5  # Adjust the factor for desired enlargement
########
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
cexRow = cexRow,  # Specify font size for row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
?heatmap.2
# Set default font size for row labels
cexRow <- rep(0.5, length(rownames(new_lcpm_up_hclust)))
# Enlarge the font size for specific row labels
cexRow[enlarged_indices] <- 1  # Adjust the factor for desired enlargement
########
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
cexRow = cexRow,  # Specify font size for row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# Set default font size for row labels
cexRow <- rep(0.5, length(row_labels))
# Enlarge the font size for specific row labels
cexRow[enlarged_indices] <- 1  # Adjust the factor for desired enlargement
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
cexRow = cexRow,  # Specify font size for row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
cexRow[enlarged_indices]
# enlarged fonts for key driver genes
# Example row labels
row_labels <- rownames(new_lcpm_up_hclust)
row_labels
# Enlarge font size for specific row labels
enlarged_row_labels <- c("FAM92B", "AK7", "DNAH9", "TSNAXIP1", "LRRC23", "RSPH14", "DZIP1L", "SPA17", "SAXO2")  # Customize as needed
# Find the indices of the enlarged row labels
enlarged_indices <- match(enlarged_row_labels, rownames(new_lcpm_up_hclust))
enlarged_indices
rep(0.5, length(row_labels)
rep(0.5, length(row_labels))
# Set default font size for row labels
cexRow <- rep(0.5, length(row_labels))
# Enlarge the font size for specific row labels
cexRow[enlarged_indices] <- 1  # Adjust the factor for desired enlargement
cexRow
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
cexRow = cexRow,  # Specify font size for row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
#          cexRow = cexRow,  # Specify font size for row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# Set default font size for row labels
cexRow <- rep(0.1, length(row_labels))
# Enlarge the font size for specific row labels
cexRow[enlarged_indices] <- 1  # Adjust the factor for desired enlargement
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
cexRow = cexRow,  # Specify font size for row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# custom color palette for gene
my_palette <- colorRampPalette(c("#27003E","#FFFF96"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# custom color palette for gene
my_palette <- colorRampPalette(c("#27003E","#FFFF00"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# custom color palette for gene
my_palette <- colorRampPalette(c("#27003E","#FFFFB2"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# custom color palette for gene
my_palette <- colorRampPalette(c("#541977","#FFFFB2"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
# custom color palette for gene
my_palette <- colorRampPalette(c("#2E0844","#FFFFB2"))(n = 50) # custom heatmap pallette
heatmap.2(new_lcpm_up_hclust,
col = my_palette,
trace = "none",  # Do not show row/column labels
Colv=NA,
labRow = row_labels,  # Specify row labels
scale = "row",  # Scale rows (genes)
key = TRUE,      # Display the color key (legend)
key.title = "Expression Level",  # Title for the legend
key.xlab = "Color Scale",          # X-axis label for the legend
keysize = 0.7,  # Adjust this value for a more compact key
main = "Gene Expression Heatmap of genes upregulated in \nnasal_gene~blood_Eos and bronch_gene~BAL_neut",# heat map title
RowSideColors = deg_up_reordered$type_col,
ColSideColors = phen_sub$eos_col)
